From 0d81ad36c690aeab57ba278d0668435c0f617855 Mon Sep 17 00:00:00 2001
From: Shreenidhi Shedi <sshedi@vmware.com>
Date: Fri, 24 Jun 2022 20:01:38 +0530
Subject: [PATCH 4/4] sinkport

Signed-off-by: Shreenidhi Shedi <sshedi@vmware.com>
---
 bridge/link.c                | 24 +++++++++++++++++++++---
 include/uapi/linux/if_link.h |  1 +
 ip/iplink_bridge_slave.c     | 19 +++++++++++++++++--
 3 files changed, 39 insertions(+), 5 deletions(-)

diff --git a/bridge/link.c b/bridge/link.c
index 8557026..1b9a76d 100644
--- a/bridge/link.c
+++ b/bridge/link.c
@@ -16,6 +16,7 @@
 #include "libnetlink.h"
 #include "utils.h"
 #include "br_common.h"
+#include "hcx_helpers.h"
 
 static unsigned int filter_index;
 
@@ -155,6 +156,10 @@ static void print_protinfo(FILE *fp, struct rtattr *attr)
 		if (prtb[IFLA_BRPORT_ISOLATED])
 			print_onoff(fp, "isolated",
 				    rta_getattr_u8(prtb[IFLA_BRPORT_ISOLATED]));
+
+        if (get_arp_probe() && prtb[IFLA_BRPORT_SINK_CONNECTED])
+            print_onoff(fp, "sink_connected",
+                    rta_getattr_u8(prtb[IFLA_BRPORT_SINK_CONNECTED]));
 	} else
 		print_portstate(rta_getattr_u8(attr));
 }
@@ -249,7 +254,11 @@ static void usage(void)
 	fprintf(stderr,	"                               [ root_block {on | off} ]\n");
 	fprintf(stderr,	"                               [ learning {on | off} ]\n");
 	fprintf(stderr,	"                               [ learning_sync {on | off} ]\n");
-	fprintf(stderr,	"                               [ flood {on | off} ]\n");
+    fprintf(stderr,	"                               [ flood {on | off} ]\n");
+
+    if (get_arp_probe())
+        fprintf(stderr, "                               [ sink_connected {on | off} ]\n");
+
 	fprintf(stderr,	"                               [ mcast_flood {on | off} ]\n");
 	fprintf(stderr,	"                               [ neigh_suppress {on | off} ]\n");
 	fprintf(stderr,	"                               [ vlan_tunnel {on | off} ]\n");
@@ -306,6 +315,7 @@ static int brlink_modify(int argc, char **argv)
 	__s16 mode = -1;
 	__u16 flags = 0;
 	struct rtattr *nest;
+    __s8 sink_connected = -1;
 
 	while (argc > 0) {
 		if (strcmp(*argv, "dev") == 0) {
@@ -339,7 +349,11 @@ static int brlink_modify(int argc, char **argv)
 			NEXT_ARG();
 			if (!on_off("flood", &flood, *argv))
 				return -1;
-		} else if (strcmp(*argv, "mcast_flood") == 0) {
+        } else if (get_arp_probe() && strcmp(*argv, "sink_connected") == 0) {
+            NEXT_ARG();
+            if (!on_off("sink_connected", &sink_connected, *argv))
+                return -1;
+        } else if (strcmp(*argv, "mcast_flood") == 0) {
 			NEXT_ARG();
 			if (!on_off("mcast_flood", &mcast_flood, *argv))
 				return -1;
@@ -436,7 +450,11 @@ static int brlink_modify(int argc, char **argv)
 		addattr8(&req.n, sizeof(req), IFLA_BRPORT_LEARNING, learning);
 	if (learning_sync >= 0)
 		addattr8(&req.n, sizeof(req), IFLA_BRPORT_LEARNING_SYNC,
-			 learning_sync);
+				learning_sync);
+
+	if (get_arp_probe() && sink_connected >= 0)
+		addattr8(&req.n, sizeof(req), IFLA_BRPORT_SINK_CONNECTED,
+				sink_connected);
 
 	if (cost > 0)
 		addattr32(&req.n, sizeof(req), IFLA_BRPORT_COST, cost);
diff --git a/include/uapi/linux/if_link.h b/include/uapi/linux/if_link.h
index f4a9715..56d5d35 100644
--- a/include/uapi/linux/if_link.h
+++ b/include/uapi/linux/if_link.h
@@ -335,6 +335,7 @@ enum {
 	IFLA_BRPORT_NEIGH_SUPPRESS,
 	IFLA_BRPORT_ISOLATED,
 	IFLA_BRPORT_BACKUP_PORT,
+    IFLA_BRPORT_SINK_CONNECTED, /* port connected to sink device */
 	__IFLA_BRPORT_MAX
 };
 #define IFLA_BRPORT_MAX (__IFLA_BRPORT_MAX - 1)
diff --git a/ip/iplink_bridge_slave.c b/ip/iplink_bridge_slave.c
index 5a6e485..6147f79 100644
--- a/ip/iplink_bridge_slave.c
+++ b/ip/iplink_bridge_slave.c
@@ -18,6 +18,7 @@
 #include "rt_names.h"
 #include "utils.h"
 #include "ip_common.h"
+#include "hcx_helpers.h"
 
 static void print_explain(FILE *f)
 {
@@ -31,7 +32,12 @@ static void print_explain(FILE *f)
 		"                        [ fastleave {on | off} ]\n"
 		"                        [ root_block {on | off} ]\n"
 		"                        [ learning {on | off} ]\n"
-		"                        [ flood {on | off} ]\n"
+		"                        [ flood {on | off} ]\n");
+
+    if (get_arp_probe())
+        fprintf(stderr, "           [ sink_connected {on | off} ]\n");
+
+    fprintf(stderr,
 		"                        [ proxy_arp {on | off} ]\n"
 		"                        [ proxy_arp_wifi {on | off} ]\n"
 		"                        [ mcast_router MULTICAST_ROUTER ]\n"
@@ -166,6 +172,11 @@ static void bridge_slave_print_opt(struct link_util *lu, FILE *f,
 		_print_onoff(f, "unicast_flood", "flood",
 			     rta_getattr_u8(tb[IFLA_BRPORT_UNICAST_FLOOD]));
 
+    if (get_arp_probe() && tb[IFLA_BRPORT_SINK_CONNECTED]) {
+        _print_onoff(f, "sink_connected", "sink_connected",
+                rta_getattr_u8(tb[IFLA_BRPORT_SINK_CONNECTED]));
+    }
+
 	if (tb[IFLA_BRPORT_ID])
 		print_0xhex(PRINT_ANY, "id", "port_id 0x%x ",
 			    rta_getattr_u16(tb[IFLA_BRPORT_ID]));
@@ -391,9 +402,13 @@ static int bridge_slave_parse_opt(struct link_util *lu, int argc, char **argv,
 		} else if (matches(*argv, "help") == 0) {
 			explain();
 			return -1;
+		} else if (get_arp_probe() && matches(*argv, "sink_connected") == 0) {
+			NEXT_ARG();
+			bridge_slave_parse_on_off("sink_connected", *argv, n,
+					IFLA_BRPORT_SINK_CONNECTED);
 		} else {
 			fprintf(stderr, "bridge_slave: unknown option \"%s\"?\n",
-				*argv);
+					*argv);
 			explain();
 			return -1;
 		}
-- 
2.25.1

