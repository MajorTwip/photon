From 9d7f895dddba9b78e5852239df47c96954bffb9c Mon Sep 17 00:00:00 2001
From: Srish Srinivasan <ssrish@vmware.com>
Date: Wed, 14 Dec 2022 14:20:08 +0530
Subject: [PATCH] Fix-for-CVE-2022-46908

The upstream patch: https://sqlite.org/src/info/cefc032473ac5ad2
is not directly applicable to the source that we are consuming because
Expected source: https://www.sqlite.org/src/tarball/sqlite.tar.gz?r=release
But we are consuming: https://sqlite.org/2022/sqlite-autoconf-%{sourcever}.tar.gz

So the patch had to be modified.
The patch involves 2 code changes.

Change1: code change to mitigate the vulnerability - Implemented in our patch

Change2: a test to check if the vulnerability still exists - Not implemented in our patch as the required test file to be patched is not found in the source we are consuming

---
 shell.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/shell.c b/shell.c
index d104768..effaae6 100644
--- a/shell.c
+++ b/shell.c
@@ -12894,7 +12894,7 @@ static int safeModeAuth(
     "zipfile",
     "zipfile_cds",
   };
-  UNUSED_PARAMETER(zA2);
+  UNUSED_PARAMETER(zA1);
   UNUSED_PARAMETER(zA3);
   UNUSED_PARAMETER(zA4);
   switch( op ){
@@ -12905,7 +12905,7 @@ static int safeModeAuth(
     case SQLITE_FUNCTION: {
       int i;
       for(i=0; i<ArraySize(azProhibitedFunctions); i++){
-        if( sqlite3_stricmp(zA1, azProhibitedFunctions[i])==0 ){
+	 if( sqlite3_stricmp(zA2, azProhibitedFunctions[i])==0 ){
           failIfSafeMode(p, "cannot use the %s() function in safe mode",
                          azProhibitedFunctions[i]);
         }
-- 
2.17.1

