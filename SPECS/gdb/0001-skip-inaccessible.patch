From 5c723a38f49be59c82d655516e88d1184d0c0716 Mon Sep 17 00:00:00 2001
From: Vikash Bansal <bvikas@vmware.com>
Date: Mon, 5 Oct 2020 19:38:56 +0530
Subject: [PATCH] gdb: Stop inaccessible region from getting dumped

Background : 7.12 onward version of gdb started dumping some
inaccessible regions (e.g: alignment gaps) in coredump, which
is increasing the size of core file. Bug 2564068 was raised
for this issue.

Fix:
If a memory region in smaps file is having anonymous keyword
and "read, write and execute" flags are "not set"
Then that memory region is inaccessible, so should not be dumped.
---
 gdb/linux-tdep.c | 17 ++++++++++++++---
 1 file changed, 14 insertions(+), 3 deletions(-)

--- a/gdb/linux-tdep.c	2021-01-08 17:06:02.507368433 +0530
+++ b/gdb/linux-tdep.c	2021-01-08 20:12:11.921436309 +0530
@@ -1423,10 +1423,21 @@ linux_find_memory_regions_full (struct g
 	    }
 
 	  if (has_anonymous)
-	    should_dump_p = should_dump_mapping_p (filterflags, &v, priv,
-					           mapping_anon_p,
-						   mapping_file_p,
-					           filename, addr, offset);
+	    {
+	      if (read == 0 && write == 0 && exec == 0)
+	        {
+	          /* This is an inaccessible region and should not
+	             be dumped */
+	          should_dump_p = 0;
+	        }
+	      else
+	        { 
+	          should_dump_p = should_dump_mapping_p (filterflags, &v, priv,
+		       			                 mapping_anon_p,
+						         mapping_file_p,
+					                 filename, addr, offset);
+	        }
+	    }
 	  else
 	    {
 	      /* Older Linux kernels did not support the "Anonymous:" counter.
