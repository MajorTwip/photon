From 7035676c3daa4f1c3766095561f12e7a0e82c736 Mon Sep 17 00:00:00 2001
From: Daniel Stenberg <daniel@haxx.se>
Date: Mon, 16 May 2022 16:28:13 +0200
Subject: [PATCH] content_encoding: return error on too many compression steps

The max allowed steps is arbitrarily set to 5.
---
 lib/content_encoding.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/lib/content_encoding.c b/lib/content_encoding.c
index c5591ca48..95ba48a2d 100644
--- a/lib/content_encoding.c
+++ b/lib/content_encoding.c
@@ -1026,16 +1026,20 @@ static const struct content_encoding *find_encoding(const char *name,
       return ce;
   }
   return NULL;
 }
 
+/* allow no more than 5 "chained" compression steps */
+#define MAX_ENCODE_STACK 5
+
 /* Set-up the unencoding stack from the Content-Encoding header value.
  * See RFC 7231 section 3.1.2.2. */
 CURLcode Curl_build_unencoding_stack(struct Curl_easy *data,
                                      const char *enclist, int maybechunked)
 {
   struct SingleRequest *k = &data->req;
+  int counter = 0;
 
   do {
     const char *name;
     size_t namelen;
 
@@ -1066,10 +1070,15 @@ CURLcode Curl_build_unencoding_stack(struct Curl_easy *data,
       }
 
       if(!encoding)
         encoding = &error_encoding;  /* Defer error at stack use. */
 
+      if(++counter >= MAX_ENCODE_STACK) {
+        failf(data, "Reject response due to %u content encodings",
+              counter);
+        return CURLE_BAD_CONTENT_ENCODING;
+      }
       /* Stack the unencoding stage. */
       writer = new_unencoding_writer(data, encoding, k->writer_stack);
       if(!writer)
         return CURLE_OUT_OF_MEMORY;
       k->writer_stack = writer;
-- 
2.36.1

