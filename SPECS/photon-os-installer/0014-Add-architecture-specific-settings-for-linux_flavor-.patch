From 2d8f505744e112ab2316d7ed8c7e95b3c7061685 Mon Sep 17 00:00:00 2001
From: Oliver Kurth <okurth@gmail.com>
Date: Wed, 28 Jun 2023 14:20:27 -0700
Subject: [PATCH 14/14] Add architecture specific settings for `linux_flavor`
 and `packages`, for example `linux_flavor_aarch64` to set the flavor when
 installing using Arm64 architecture.

Architecture specific settings for `packages` (eg. `packages_x86_64`)
will be appended. This is already used in the file set by `packages_file`.

Change-Id: I755ca8be93c589cee6795e77205cf2352f8a66cd
---
 docs/ks_config.md             |  9 +++++++++
 photon_installer/installer.py | 14 ++++++++++++--
 2 files changed, 21 insertions(+), 2 deletions(-)

diff --git a/docs/ks_config.md b/docs/ks_config.md
index dfe9b53..9191b9f 100644
--- a/docs/ks_config.md
+++ b/docs/ks_config.md
@@ -722,6 +722,15 @@ Used to configure the network.
   }
   ```
 
+### _"linux_flavor_<arch>":_ (optional)
+- The flavor for a specific architecture, which takes precedence over `linux_flavor`. For example:
+  ```json
+  {
+    "linux_flavor_aarch64": "linux"
+  }
+  ```
+  architecture values can be `aarch64` or `x86_64`.
+
 ### _"photon_docker_image":_ (optional)
 - Contains the docker image <name:tag>
  are present in _"packages"_ or _"packagelist_file"_
diff --git a/photon_installer/installer.py b/photon_installer/installer.py
index 0433883..b0688ec 100644
--- a/photon_installer/installer.py
+++ b/photon_installer/installer.py
@@ -108,6 +108,11 @@ class Installer(object):
         self.ab_present = False
         self.mounts = []
 
+        # some keys can have arch specific variations
+        for key in ['packages', 'linux_flavor']:
+            for arch in ['x86_64', 'aarch64']:
+                self.known_keys.add(f'{key}_{arch}')
+
         if os.path.exists(self.working_directory) and os.path.isdir(self.working_directory) and working_directory == Defaults.WORKING_DIRECTORY:
             shutil.rmtree(self.working_directory)
         if not os.path.exists(self.working_directory):
@@ -278,11 +283,12 @@ class Installer(object):
         """
         Add default install_config settings if not specified
         """
-        arch = subprocess.check_output(['uname', '-m'], universal_newlines=True).rstrip('\n')
-
         # set arch to host's one if not defined
         if 'arch' not in install_config:
+            arch = subprocess.check_output(['uname', '-m'], universal_newlines=True).rstrip('\n')
             install_config['arch'] = arch
+        else:
+            arch = install_config['arch']
 
         # 'bootmode' mode
         if 'bootmode' not in install_config:
@@ -386,6 +392,10 @@ class Installer(object):
             if dirname not in install_config['search_path']:
                 install_config['search_path'].append(dirname)
 
+        # arch specific setting takes precedence
+        if f'linux_flavor_{arch}' in install_config:
+            install_config['linux_flavor'] = install_config[f'linux_flavor_{arch}']
+
         if 'linux_flavor' not in install_config:
             install_config['linux_flavor'] = 'linux'
 
-- 
2.23.1

